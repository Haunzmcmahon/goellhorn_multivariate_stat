---
title: "project"
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
editor: visual
execute: 
  warning: false
  message: false
---

{{< pagebreak >}}
```{r}
#| echo: true
#| output: false
library(tidyverse)
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
library(MASS)  # For Box-Cox
library(moments)  # For skewness/kurtosis
library(ggfortify)
library(viridis)  # For a professional color palette
library(ggpubr)   # For boxplots    # For normality tests and transformations
library(ggthemes) # For better themes
library(kableExtra)
library(GGally)
```
# Introduction

# Setting up our relevante Dataset:

```{r}
data_loc = "mc.csv"
data <- read.csv(data_loc)
#-3 values represent null values so we assing NA
data[data == -3] <- NA
#subset = styria -> NUTS2 = AT22
data <- data |> filter(xnuts2 == 22)
#filtering only for the relevant Predictors
data <- data |>dplyr::select(werr, dseitz, dstd, kjahr, xanzkind, xminalt,
            balt5, bsex,bfst, xbstaat, xbgeblan, xhatlevel, xeinw, xlfi,xpatch)
head(data)

data <- data %>%
    mutate(
    werr = factor(werr, levels = 1:8, 
                  labels = c("before 1919", "1919-1944", "1945-1960", 
                             "1961-1970", "1971-1980", "1981-1990", 
                             "1991-2000", "after 2000")),
    
    balt5 = factor(balt5, levels = 0:15, 
                   labels = c("0-14", "15-19", "20-24", "25-29", "30-34", "35-39", 
                              "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", 
                              "70-74", "75-79", "80-84", "85+")),
    
    bsex = factor(bsex, levels = c(1, 2), labels = c("Male", "Female")),
    
    bfst = factor(bfst, levels = 1:4, 
                  labels = c("Single", "Married", "Widowed", "Divorced")),
    
    xbstaat = factor(xbstaat, levels = 1:7, 
                     labels = c("Austria", "EU15 without Austria", "EU15 10 new members", 
                                "Former Yugoslavia", "Turkey", "Other countries", "Bulgaria/Romania")),
    
    xbgeblan = factor(xbgeblan, levels = 1:7, 
                      labels = c("Austria", "EU15 without Austria", "EU15 10 new members", 
                                 "Former Yugoslavia", "Turkey", "Other countries", "Bulgaria/Romania")),
    
    xhatlevel = factor(xhatlevel, levels = c(0, 11, 21, 22, 30, 31, 32, 41, 42, 43, 51, 52, 60, 99), 
                       labels = c("ISCED 0/1", "ISCED 1", "ISCED 2", "ISCED 3c <2 years", 
                                  "ISCED 3", "ISCED 3c 2+ years", "ISCED 3a, b", "ISCED 4a, b", 
                                  "ISCED 4c", "ISCED 4", "ISCED 5b", "ISCED 5a", "ISCED 6", "Not applicable")),
    
    xeinw = factor(xeinw, levels = 1:4, 
                   labels = c("up to 2000", "2001-10000", "10001-100000", "100001+")),
    
    xlfi = factor(xlfi, levels = 1:3, 
                  labels = c("Employed", "Unemployed", "Not in labor force")),
    
    xpatch = factor(xpatch, levels = c(1, 2), labels = c("Yes", "No"))
  )
data <- na.omit(data)

head(data)
```

```{r}
data.numeric <-c("dseitz","dstd","kjahr","xanzkind")
data.polytomous <- c("balt5","bfst","xbstaat","xbgeblan","xhatlevel","xeinw","xlfi")
data.categorical <- c("balt5","bsex","bfst","xbstaat","xbgeblan","xhatlevel","xeinw","xlfi","xpatch")
```
{{< pagebreak >}}

# Descriptice Analysis

## Numeric Variables

```{r}
#| echo: false
#| output: false
# Define the function
plot_numeric_variable <- function(data, column_name, target_variable,plot_title) {
  
  # Histogram with density line
  hist_plot <- ggplot(data, aes_string(x = column_name)) +
    geom_histogram(aes(y = ..density..), bins = 30) +
    geom_density() +
    labs(x = "Data", y = "Density") +
    ggtitle("Histogram") +
    theme_grey() +
    scale_colour_grey()
  
  # Boxplot
  boxplot <- ggplot(data, aes_string(y = column_name)) +
    geom_boxplot() +
    xlim(-1, 1) +
    labs(y = "Data") +
    ggtitle("Boxplot") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()
  
  # Relationship between the numeric variable and the categorical target variable
  relationship_plot <- ggplot(data, aes_string(x = target_variable, y = column_name)) +
    geom_boxplot() +
    labs(x = target_variable, y = column_name) +
    ggtitle("relationship with target werr") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()
  
  # Arrange all three plots in one row
  plot <- ggarrange(hist_plot, boxplot, relationship_plot, ncol = 3, nrow = 1, widths = c(0.5,0.3,1))
  
  # Add title to the combined plot
  plot_with_title <- annotate_figure(plot, 
                                     top = text_grob(paste(plot_title, target_variable), 
                                                     face = "bold", size = 14))
  
  # Return the plot with title
  return(plot_with_title)
}

```

### dseitz: working in the current job since. . . (in months)
```{r}
summary(data$dseitz)
sd(data$dseitz)
```
Spread & Variability: Ranges from 0 to 469, with a high standard deviation (117.17), indicating significant dispersion.
Central Tendency: Median = 95.5, Mean = 127.6 (higher than the median), suggesting right-skewness.
Quartiles: Q1 = 29.5, Q3 = 187.5, with a large IQR (158), showing a wide spread.
Shape: The high max (469) and right-skewed distribution suggest potential outliers.
```{r fig.width=11.7, fig.height=8.3/3, out.width="100%", dpi=300}
#|warning: false
plot_numeric_variable(data,
  "dseitz","werr","dseitz: working in the current job since. . . (in months)")
```
The histogram shows that the variable follows a right-skewed distribution and has a high spread.
Through the boxplot we see that most values are between 0 and 200 with some outliers above 400.
The box plot categorized by the buildings-Year shows that the distribution of dseitz differs across the categories.
Additionally we see some outliers, but none of the seem to strongly influence the mean of the category, except 1919-1944 which shows a mean skewed towards the outlier.

The skeweness and the different distributions throughout the categories might indicate that a transformation would help to conform more to a normal-distribution.

```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
#| echo: false
# Load required libraries
library(ggplot2)
library(ggpubr)

# Define the function to compare transformations
plot_numeric_variable_with_transformation <- function(data, column_name, target_variable) {
  
  # Original Histogram with density line
  hist_plot_original <- ggplot(data, aes_string(x = column_name)) +
    geom_histogram(aes(y = ..density..), bins = 30) +
    geom_density() +
    labs(x = "Data", y = "Density (Original)") +
    theme_grey() +
    scale_colour_grey()
  
  # Original Boxplot
  boxplot_original <- ggplot(data, aes_string(y = column_name)) +
    geom_boxplot() +
    xlim(-1, 1) +
    labs(y = "Data (Original)") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

  # Apply transformation (sqrt in this case)
  data_transformed <- data
  data_transformed[[paste0(column_name, "_sqrt")]] <- sqrt(data[[column_name]])

  # Transformed Histogram with density line
  hist_plot_transformed <- ggplot(data_transformed, aes_string(x = paste0(column_name, "_sqrt"))) +
    geom_histogram(aes(y = ..density..), bins = 30) +
    geom_density() +
    labs(x = "Data", y = "Density (Transformed)") +
    theme_grey() +
    scale_colour_grey()

  # Transformed Boxplot
  boxplot_transformed <- ggplot(data_transformed, aes_string(y = paste0(column_name, "_sqrt"))) +
    geom_boxplot() +
    xlim(-1, 1) +
    labs(y = "Data (Transformed)") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

  # Relationship Plot (Original)
  relationship_plot_original <- ggplot(data, aes_string(x = target_variable, y = column_name)) +
    geom_boxplot() +
    labs(x = target_variable, y = column_name) +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

  # Relationship Plot (Transformed)
  relationship_plot_transformed <- ggplot(data_transformed, aes_string(x = target_variable, y = paste0(column_name, "_sqrt"))) +
    geom_boxplot() +
    labs(x = target_variable, y = paste0(column_name, " (Transformed)")) +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

  # Arrange all six plots in a grid (before and after transformation, both distributions and relationships)

  plot <- ggarrange(
    hist_plot_original,boxplot_original,relationship_plot_original,
    hist_plot_transformed,boxplot_transformed,relationship_plot_transformed,
    ncol = 3, nrow = 2,widths = c(0.5,0.3,1)
  )
  
  # Add title to the combined plot
  plot_with_title <- annotate_figure(plot, 
    top = text_grob(paste("Comparison of Original and Transformed (sqrt) Data",column_name), 
    face = "bold", size = 14,))

  # Return the plot with title
  return(plot_with_title)
}

```

```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
plot_numeric_variable_with_transformation(data,"dseitz","werr")
```
After applying the Square root transformation we can see in the boxplot that the data is now more organised around the median value.
Comparing the individual medians in the categories of the target variable shows some improvements in the distribution.
There is still one outlier in the  1919-1944 category which might be good to remove.

```{r}
# Perform Shapiro-Wilk test before transformation
shapiro_before <- shapiro.test(data$dseitz)
data_sqrt <- sqrt(data$dseitz)
shapiro_after <- shapiro.test(data_sqrt)

# Create a formatted table of test results
shapiro_results <- data.frame(
  Test = c("Original Data", "Square Root Transformed"),
  W_Statistic = c(shapiro_before$statistic, shapiro_after$statistic),
  P_Value = c(shapiro_before$p.value, shapiro_after$p.value)
)
kable(shapiro_results, caption = "Shapiro-Wilk Normality Test Results", digits = 5)
```
Using the Shapiro-Wilk Normality Test we can show that we improved the normality of the data by some degree by comparing the W-Value.
By transforming we were able to increase the W-value closer to 1.

While building the model, we will try the transformend variable as well and see how it influences the performance.

### xminalt age of youngest child in the family (in years)
```{r}
summary(data$xminalt)
sd(data$xminalt)
```
The variable shows a wide spread, high variability, and a right-skewed distribution. The presence of a very high maximum value (469) compared to Q3 (187.5) suggests possible outliers.


```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
plot_numeric_variable(data, "xminalt","werr","xminalt, age of youngest child in the family (in years)")
```
The histogram shows a left-skewed distribution, with many values concentrated at the higher end (close to 20 years).
The boxplot confirms this skewness, as the median is closer to the upper quartile.
A sharp spike at 20 years suggests a possible ceiling effect or rounding in data collection.

The whiskers extend further toward lower values, and some outliers appear at the lower end (0-5 years).


The boxplots by groups of werr indicate variations in child age distribution across different categories.
Some groups (e.g., 1961-1970) show more lower-end outliers, while others (before 1919, 1981-1990) have higher medians.
This suggests that the age of the youngest child may have a meaningful relationship with the target variable.


```{r}

pair_data <- data[,data.numeric]
ggpairs(pair_data,
        lower = list(continuous = "smooth"), # Smoothed scatterplots on the lower panel
        diag = list(continuous = "densityDiag"), # Density plots on the diagonal
        upper = list(continuous = "cor")) # Add correlation coefficients on the upper panel
```
{{< pagebreak >}}
### Relationship between numerical and Categorical variables
#### **dseitz ~ balt5** Relation ship between dseitz: working in the current job since. . . (in months) and age category"
```{r fig.width=11.7, out.width="100%", dpi=300}
library(knitr)

# Compute count and percentage
freq_table <- data %>%
  group_by(balt5) %>%
  summarise(Count = n()) %>%
  mutate(Percentage = round((Count / sum(Count)) * 100, 1))  # Calculate percentage

freq_table_wide <- freq_table %>%
  pivot_longer(cols = c(Count, Percentage), 
               names_to = "Metric", 
               values_to = "Value") %>%
  pivot_wider(names_from = balt5, values_from = Value) %>%
  dplyr::select(Metric, everything())  # Ensure 'Metric' is first

# Print the table as a kable
kable(freq_table_wide, format = "html", caption = "Age Group Count and Percentage")

```

``````{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}

counts <- data %>%
  group_by(balt5) %>%
  summarise(count = n())
# Histogram with density line
relationship_plot <- ggplot(data, aes_string(x = "balt5", y = "dseitz")) +
    geom_boxplot() +
    labs( x= "",y = "dseitz") +
   # ggtitle("relationship between dseitz and balt5") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

violinplot <- ggplot(data, aes(x = balt5, y = dseitz)) +
  geom_violin()+
  theme_grey() +
  theme(plot.margin = margin(b = 0))+
  scale_colour_grey() +
  scale_fill_grey()

plot <- ggarrange(relationship_plot, violinplot, ncol = 1, nrow = 2, heights = c(0.5,0.5))
# Add title to the combined plot
  plot_with_title <- annotate_figure(
  plot,
  top = text_grob(paste("Relation ship between dseitz: working in the current job since. . . (in months) and age category"), 
  face = "bold", size = 14))

plot_with_title
  
```


The median dseitz (job tenure) increases as age increases, which is expected since older employees generally have had more time to accumulate tenure.
Young employees tend to switch jobs more frequently or have just entered the workforce, leading to lower and less variable tenures.
Middle-aged employees exhibit the most variation in tenure, possibly due to career shifts, promotions, or industry differences.
Older employees generally have longer tenures and less variation, indicating job stability and experience accumulation.

This suggests that it might be beneficial to regroup the age groups into three bigger categories.


#### **dseitz ~ bfst** Relation ship between dseitz: working in the current job since. . . (in months) and family status")
```{r fig.width=11.7, out.width="100%", dpi=300}
library(knitr)

# Compute count and percentage
freq_table <- data %>%
  group_by(bfst) %>%
  summarise(Count = n()) %>%
  mutate(Percentage = round((Count / sum(Count)) * 100, 1))  # Calculate percentage

freq_table_wide <- freq_table %>%
  pivot_longer(cols = c(Count, Percentage), 
               names_to = "Metric", 
               values_to = "Value") %>%
  pivot_wider(names_from = bfst, values_from = Value) %>%
  dplyr::select(Metric, everything())  # Ensure 'Metric' is first

# Print the table as a kable
kable(freq_table_wide, format = "html", caption = "family status Count and Percentage")

```

```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
# Histogram with density line
relationship_plot <- ggplot(data, aes_string(y = "dseitz", x = "bfst")) +
    geom_boxplot() +
    labs(y = "dseitz" , x = "bfst") +
   # ggtitle("relationship between dseitz and balt5") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

violinplot <- ggplot(data, aes(x = bfst, y = dseitz)) +
  geom_violin()+
  theme_grey() +
  scale_colour_grey() +
  scale_fill_grey()

plot <- ggarrange(relationship_plot, violinplot, ncol = 1, nrow = 2, widths = c(0.5,0.5))
# Add title to the combined plot
  plot_with_title <- annotate_figure(
  plot,
  top = text_grob(paste("Relation ship between dseitz: working in the current job since. . . (in months) and family status"), 
  face = "bold", size = 14))

plot_with_title
```
#### '**xminalt ~ bfst** age of youngest child in the family (in years) and age category"

```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
# Histogram with density line
relationship_plot <- ggplot(data, aes_string(y = "xminalt", x = "balt5")) +
    geom_boxplot() +
    labs(y = "xminalt" , x = "balt5") +
   # ggtitle("relationship between dseitz and balt5") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

violinplot <- ggplot(data, aes(x = balt5, y = xminalt)) +
  geom_violin()+
  theme_grey() +
  scale_colour_grey() +
  scale_fill_grey()

plot <- ggarrange(relationship_plot, violinplot, ncol = 1, nrow = 2, widths = c(0.5,0.5))
# Add title to the combined plot
  plot_with_title <- annotate_figure(
  plot,
  top = text_grob(paste("xminalt, age of youngest child in the family (in years) and age category"), 
  face = "bold", size = 14))

plot_with_title
```
The higer the age group, the older the jungest child gets with some outlier.
We see that it makes sence to combine some 

#### xminalt ~ bfsft
```{r fig.width=11.7, fig.height=8.3/2, out.width="100%", dpi=300}
# Histogram with density line
relationship_plot <- ggplot(data, aes_string(y = "xminalt", x = "bfst")) +
    geom_boxplot() +
    labs(y = "xminalt" , x = "bfst") +
   # ggtitle("relationship between dseitz and balt5") +
    theme_grey() +
    scale_colour_grey() +
    scale_fill_grey()

violinplot <- ggplot(data, aes(x = bfst, y = xminalt)) +
  geom_violin()+
  theme_grey() +
  scale_colour_grey() +
  scale_fill_grey()

plot <- ggarrange(relationship_plot, violinplot, ncol = 1, nrow = 2, widths = c(0.5,0.5))
# Add title to the combined plot
  plot_with_title <- annotate_figure(
  plot,
  top = text_grob(paste("xminalt, age of youngest child in the family (in years) and family status"), 
  face = "bold", size = 14))

plot_with_title
```